{"version":3,"sources":["helpers/fetch.js","helpers/helpers.js","components/Card.js","components/Minicard.js","components/Pagination.js","App.js","index.js"],"names":["fetcher","param","a","url","queryKey","fetch","response","json","capitalize","value","charAt","toUpperCase","slice","Card","name","useParams","useQuery","data","isLoading","className","to","icon","faLongArrowAltLeft","color","id","types","map","e","type","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","src","sprites","front_default","back_default","front_shiny","back_shiny","moves","move","Minicard","image","Pagination","useState","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","results","pokemon","previousLabel","nextLabel","onPageChange","selected","containerClassName","queryClient","QueryClient","App","QueryClientProvider","client","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.973aee39.chunk.js","sourcesContent":["export async function fetcher(param) {\n  let url = param.queryKey[0];\n  const response = await fetch(url);\n  return response.json();\n}","import { getDefaultNormalizer } from \"@testing-library/react\";\n\nexport function capitalize(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\nexport function shuffleArray(array) {\n  let newArray = array;\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\nexport function types(type){\n  const types = {\n    bug: \"bg-green-800\",\n    dark: \"bg-gray-400\",\n    dragon:\"bg-purple-600\",\n    electric:\"bg-yellow-400\",\n    fairy:\"bg-red-200\",\n    fighting:\"bg-yellow-800\",\n    fire:\"bg-red-600\",\n    flying:\"bg-blue-400\",\n    ghost:\"bg-purple-800\",\n    grass:\"bg-green-400\",\n    ground:\"bg-yellow-200\",\n    ice:\"bg-blue-200\",\n    normal:\"bg-gray-300\",\n    poison:\"bg-pink-800\",\n    psychic:\"bg-pink-500\",\n    rock:\"bg-yellow-300\",\n    steel:\"bg-gray-400\",\n    water:\"bg-blue-600\",\n  }\n  return types[type]\n}","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltRight,\n  faLongArrowAltLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { fetcher } from \"../helpers/fetch\";\nimport { capitalize, shuffleArray, types } from \"../helpers/helpers\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card() {\n  const { name } = useParams();\n  const { data, isLoading } = useQuery(\n    `https://pokeapi.co/api/v2/pokemon/${name}`,\n    fetcher\n  );\n\n  if (isLoading) {\n    return (\n      <div className={\"bg-forest bg-cover h-full  pt-2 px-4 rounded-xl\"}></div>\n    );\n  }\n  return (\n    <div className={\"bg-forest bg-cover h-full  pt-2 px-4 rounded-xl\"}>\n      <div className={\"flex flex-row items-center gap-5\"}>\n        <Link to={`/`}>\n          <FontAwesomeIcon icon={faLongArrowAltLeft} color={\"gold\"} />\n        </Link>\n        <div className={\"flex gap-4 py-6\"}>\n          <h3 className={\"text-white font-serif text-3xl font-bold\"}>\n            {capitalize(data.name)}\n          </h3>\n\n          <h3 className={\"text-white font-serif text-3xl font-bold\"}>\n            #{data.id}\n          </h3>\n          <div className={\"flex gap-2\"}>\n            {data.types.map((e) => {\n              return (\n                <div\n                  className={`${types(\n                    e.type.name\n                  )} flex items-center px-4 rounded-xl border-black border`}\n                >\n                  <h3 className={\"text-white font-serif font-bold\"}>\n                    {capitalize(e.type.name)}\n                  </h3>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center gap-2\">\n        <img\n          className=\"border border-white rounded-xl\"\n          src={data.sprites.front_default}\n        />\n        <img\n          className=\"border border-white rounded-xl\"\n          src={data.sprites.back_default}\n        />\n        <img\n          className=\"border border-white rounded-xl\"\n          src={data.sprites.front_shiny}\n        />\n        <img\n          className=\"border border-white rounded-xl\"\n          src={data.sprites.back_shiny}\n        />\n      </div>\n      <p className={\"text-xl text-white font-serif\"}>Movements:</p>\n      {data.moves\n        .slice(0, 10)\n        .map((e) => {\n          return (\n            <h3 className={\"text-white font-serif px-8\"}>\n              - {capitalize(e.move.name)}\n            </h3>\n          );\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetcher } from \"../helpers/fetch\";\nimport { capitalize } from \"../helpers/helpers\";\nexport default function Minicard({ name, image }) {\n  const { data, isLoading } = useQuery(image, fetcher);\n  if (isLoading) {\n    return <div>Golo</div>;\n  }\n  return (\n    <div className={\"flex flex-col items-center w-20 \"}>\n      <img src={data.sprites.front_default} />\n      <div className={\"border border-black rounded-xl px-2\"}>\n        <h1>{capitalize(name)}</h1>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport ReactPaginate from \"react-paginate\";\nimport Minicard from \"./Minicard\";\nimport { fetcher } from \"../helpers/fetch\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Pagination() {\n  const { data, isLoading } = useQuery(\n    `https://pokeapi.co/api/v2/pokemon?limit=151&offset=0`,\n    fetcher\n  );\n  const [pageNumber, setPageNumber] = useState(0);\n  const userPerPage = 9;\n  const pagesVisited = pageNumber * userPerPage;\n\n  const pageCount = Math.ceil(151 / userPerPage);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  if (isLoading) {\n    return (\n      <div\n        className={\n          \"bg-back bg-cover bg-center w-80 pt-2 px-4 h-72 border-2 border-black rounded-xl\"\n        }\n      ></div>\n    );\n  }\n  return (\n    <div\n      className={\n        \"flex flex-col bg-pokedexList bg-cover bg-center h-full justify-center items-center \"\n      }\n    >\n      <div className={\"grid grid-flow-row grid-cols-3 grid-rows-3 gap-10\"}>\n        {data.results\n          .slice(pagesVisited, pagesVisited + userPerPage)\n          .map((pokemon) => {\n            return (\n              <Link to={`/pokemon/${pokemon.name}`}>\n                <Minicard name={pokemon.name} image={pokemon.url} />\n              </Link>\n            );\n          })}\n      </div>\n      <ReactPaginate\n        previousLabel={\"<-\"}\n        nextLabel={\"->\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"flex gap-4\"}\n      />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"./components/Card.js\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Pagination from \"./components/Pagination\";\nconst queryClient = new QueryClient();\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div\n        className={\"relative  max-w-md h-screen m-auto overflow-auto bg-black\"}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/pokemon/:name\" component={Card}/>\n            <Route path=\"/\" component={Pagination}/>\n          </Switch>\n        </Router>\n      </div>\n    </QueryClientProvider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}